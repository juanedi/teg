version: 2.1
jobs:
  build:
    docker:
      - image: nixos/nix:2.3.6
    environment:
      NIXPKGS_ALLOW_BROKEN: 1

    steps:
      - run:
          name: Updating channels
          command: nix-channel --update

      - run:
          name: Install system dependencies
          command: nix-env -i openssh git gnumake

      - checkout

      # - restore_cache:
      #     name: Restore Cached Dependencies
      #     keys:
      #       - teg-{{ checksum "stack.yaml" }}-{{ checksum "teg.cabal" }}

      - run:
          name: Resolve/Update Dependencies
          command: nix-shell --run true

      - run:
          name: Build Haskell binaries
          command: |
            mkdir bin
            nix-shell --run 'make build'

      - run:
          name: Codegen
          command: nix-shell --run 'bin/teg --codegen'

      - run:
          name: Build Elm apps
          command: |
            nix-shell --run 'cd ui && elm make src/Homepage.elm --output static/_build/home.js'
            nix-shell --run 'cd ui && elm make src/Main.elm --output static/_build/game.js'

      - persist_to_workspace:
          root: .
          paths:
            - ".circleci/Dockerfile-release"
            - "bin/teg"
            - "ui/static"

      # - save_cache:
      #     name: Cache Dependencies
      #     key: teg-{{ checksum "stack.yaml" }}-{{ checksum "teg.cabal" }}
      #     paths:
      #       - "/root/.stack"
      #       - ".stack-work"


  publish_tag:
    machine: true

    steps:
      - attach_workspace:
          at: .

      - run:
          name: Build image
          command: |
            docker build -f .circleci/Dockerfile-release -t $DOCKER_IMAGE_NAME .

      - run:
          name: Publish image
          command: |
            echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
            docker push $DOCKER_IMAGE_NAME
            docker tag $DOCKER_IMAGE_NAME $DOCKER_IMAGE_NAME:$CIRCLE_TAG
            docker push $DOCKER_IMAGE_NAME:$CIRCLE_TAG

workflows:
  version: 2
  build-release:
    jobs:
      - build:
          filters:
            tags:
              only: /^\d+\.\d+\.\d+/
      - publish_tag:
          requires: [ build ]
          filters:
            tags:
              only: /^\d+\.\d+\.\d+/
            branches:
              ignore: /.*/
